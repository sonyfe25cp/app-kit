
#import <Foundation/Foundation.h>

#import "{{api.ns}}Beans.h"

// Do not edit, auto generated by api-kit, kanzhun.com.
// {{api.ts}}


{% for b in api.structs %}
@implementation {{b.name}}
- (NSDictionary *) toJSON {
{% set primitives = {'i32': 'numberWithInt', 'i64': 'numberWithLong', 'float32': 'numberWithFloat', 'float64': 'numberWithDouble'} %}
    id dict = [[NSMutableDictionary alloc] init];
{% for f in b.fields %}
    {% if f.t == 'string' %}
        [dict setObject:self.{{f.name}} forKey:@"{{f.name}}"];
    {% elif f.t in primitives %}
        [dict setObject:[NSNumber {{primitives[f.t]}}:self.{{f.name}}] forKey:@"{{f.name}}"];
    {% elif f.list %}
        {% if f.list_item.t in primitives %}
        [dict setObject:self.{{f.name}} forKey:@"{{f.name}}"];
        {% else %}
    NSMutableArray *__{{f.name}} = [[NSMutableArray alloc] init];
    for (int i=0; i<[self.{{f.name}} count]; i++) {
        [__{{f.name}} addObject:[[self.{{f.name}} objectAtIndex:i] toJSON]];
    }
    [dict setObject:__{{f.name}} forKey:@"{{f.name}}"];
        {% end %}
    {% else %}
    [dict setObject:[self.{{f.name}} toJSON] forKey:@"{{f.name}}"];
    {% end %}
{% end %}
    return dict;
}

- (id)init: {% for idx, f in enumerate(b.requires) %} {% if idx > 0 %} {{f.name}}:{% end %} ({{f.type('objc')}}){{f.name}} {% end %} {
    if (self=[super init]) {
{% for f in b.requires %}
    self.{{f.name}} = {{f.name}};
{% end %}
{% for f in b.optionals %} {% if f.default('objc') is not None %}
    self.{{f.name}} = {{f.default('objc')}}; {% end %}
{% end %}
    }
    return self;
}

- (id)initWithDict:(NSDictionary *)dict {
    if (self=[super init]) {
{% set primitives = {'i32': 'intValue', 'i64': 'longValue', 'float32': 'floatValue', 'float64': 'doubleValue', 'bool': 'boolValue'}%}
{% for f in b.fields %}
  {% if f.t in primitives %}
    self.{{f.name}} = [[dict valueForKey:@"{{f.name}}"] {{primitives[f.t]}}];
  {% elif f.t == 'string' %}
    self.{{f.name}} = [dict valueForKey:@"{{f.name}}"];
  {% elif f.list %}
    self.{{f.name}} = [[NSMutableArray alloc] init];
    NSArray *{{f.name}}Arr = [dict objectForKey:@"{{f.name}}"];
    if ({{f.name}}Arr != nil && [{{f.name}}Arr isKindOfClass:[NSArray class]]) {
        for (int i=0; i<[{{f.name}}Arr count]; i++) {
        {% if f.list_item.t in primitives %}
            [self.{{f.name}} addObject:[[{{f.name}}Arr objectAtIndex:i] {{primitives[f.list_item.t]}}];
        {% elif f.list_item.t == 'string' %}
            [self.{{f.name}} addObject:[{{f.name}}Arr objectAtIndex:i]];
        {% else %}
            [self.{{f.name}} addObject:[[{{f.list_item.type('objc', 1)}} alloc] initWithDict:[{{f.name}}Arr objectAtIndex:i]]];
        {% end %}
        }
    }
  {% else %}
  self.{{f.name}} = [[{{f.type('objc', 1)}} alloc] initWithDict:[dict objectForKey:@"{{f.name}}"]];
  {% end %}
{% end %}
    }
    return self;
}
@end

{% end %}